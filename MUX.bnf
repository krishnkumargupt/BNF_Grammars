⟨design module⟩ ::= ⟨start module⟩⟨statement⟩⟨end module⟩
⟨statement⟩ ::= if⟨case⟩ else y "<=" ⟨data⟩; end if;
⟨case⟩ ::= (s(2)=⟨addr⟩) and (s(1)=⟨addr⟩) and (s(0)=⟨addr⟩) then y"<="⟨data⟩;
| (s(2)=⟨addr⟩) and (s(1)=⟨addr⟩) and (s(0)=⟨addr⟩) then y"<="⟨data⟩;
elsif⟨case⟩
⟨addr⟩ ::= ‘0’ | ‘1’
⟨data⟩ ::= i(0) | i(1) | i(2) | i(3) | i(4) | i(5) | i 6) | i(7)
⟨start module⟩ ::= architecture behv of mux is begin process(i,s) begin
⟨end module⟩ ::= end process;end behv;
